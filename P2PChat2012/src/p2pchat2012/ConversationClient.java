/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package p2pchat2012;

import client.ClientInputStreamHandler;
import common.ChatState;
import common.TagValue;
import common.TagWriter;
import common.Tags;
import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author D Thanh
 */
public class ConversationClient extends javax.swing.JFrame {

    private boolean connect=false;
    private Socket s;
    private String myName;
    private TagWriter writer;
    public String pathName="";
    private ClientInputStreamHandler cish;
    Manager m;
    String[] emoticon = {"1.gif","2.gif","3.gif","4.gif","5.gif",
                                "6.gif","7.gif","8.gif","9.gif","10.gif","11.gif","12.gif"};
  //xu ly font
   public static font_setting my_setting ;
   public static font_setting partner_setting;
 
    /**
     * Creates new form Conversation
     */
    public ConversationClient(int port, String ID, String ipconect, Manager n) {
        initComponents();
        Port.setText(port+"");
        myName=ID;
        IP_con.setText(ipconect);
        m=n;
        my_setting = new font_setting();
        partner_setting = new font_setting();
    }
    public ConversationClient(int port, String ID, Manager n) {
        initComponents();
        Port.setText(port+"");
        myName=ID;
        m=n;
        my_setting = new font_setting();
        partner_setting = new font_setting();
    }
    public ConversationClient() {
        initComponents();
        my_setting = new font_setting();
        partner_setting = new font_setting();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        smile_list = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        IP_con = new javax.swing.JTextField();
        Disconect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Chat_area = new javax.swing.JTextArea();
        Send = new javax.swing.JButton();
        Attach = new javax.swing.JButton();
        Conect = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Display_area = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        Port = new javax.swing.JTextField();
        smile_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        setting = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        bold_select = new javax.swing.JToggleButton();
        italic_select = new javax.swing.JToggleButton();
        underline_select = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        smile_list.setLayout(new GridLayout(4, 3));
        menu_item1 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/1.gif")));
        menu_item1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item1ActionPerformed(evt);
            }});
            smile_list.add(menu_item1);
            menu_item2 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/2.gif")));
            menu_item2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    menu_item2ActionPerformed(evt);
                }});
                smile_list.add(menu_item2);
                menu_item3 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/3.gif")));
                menu_item3.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        menu_item3ActionPerformed(evt);
                    }});
                    smile_list.add(menu_item3);
                    menu_item4 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/4.gif")));
                    menu_item4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            menu_item4ActionPerformed(evt);
                        }});
                        smile_list.add(menu_item4);
                        menu_item5 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/5.gif")));
                        menu_item5.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                menu_item5ActionPerformed(evt);
                            }});
                            smile_list.add(menu_item5);
                            menu_item6 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/6.gif")));
                            menu_item6.addActionListener(new java.awt.event.ActionListener() {
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    menu_item6ActionPerformed(evt);
                                }});
                                smile_list.add(menu_item6);
                                menu_item7 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/7.gif")));
                                menu_item7.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        menu_item7ActionPerformed(evt);
                                    }});
                                    smile_list.add(menu_item7);
                                    menu_item8 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/8.gif")));
                                    menu_item8.addActionListener(new java.awt.event.ActionListener() {
                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            menu_item8ActionPerformed(evt);
                                        }});
                                        smile_list.add(menu_item8);
                                        menu_item9 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/9.gif")));
                                        menu_item9.addActionListener(new java.awt.event.ActionListener() {
                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                menu_item9ActionPerformed(evt);
                                            }});
                                            smile_list.add(menu_item9);
                                            menu_item10 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/10.gif")));
                                            menu_item10.addActionListener(new java.awt.event.ActionListener() {
                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                    menu_item10ActionPerformed(evt);
                                                }});
                                                smile_list.add(menu_item10);
                                                menu_item11 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/11.gif")));
                                                menu_item11.addActionListener(new java.awt.event.ActionListener() {
                                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                        menu_item11ActionPerformed(evt);
                                                    }});
                                                    smile_list.add(menu_item11);
                                                    menu_item12 = new JMenuItem(new ImageIcon(getClass().getResource("/p2pchat2012/12.gif")));
                                                    menu_item12.addActionListener(new java.awt.event.ActionListener() {
                                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                            menu_item12ActionPerformed(evt);
                                                        }});
                                                        smile_list.add(menu_item12);

                                                        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                                                        setTitle("Conversation...");
                                                        addWindowListener(new java.awt.event.WindowAdapter() {
                                                            public void windowClosing(java.awt.event.WindowEvent evt) {
                                                                disconect(evt);
                                                            }
                                                        });

                                                        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                                                        jLabel1.setText("IP connection:");

                                                        IP_con.setText("127.0.0.1");
                                                        IP_con.addKeyListener(new java.awt.event.KeyAdapter() {
                                                            public void keyPressed(java.awt.event.KeyEvent evt) {
                                                                IP_conKeyPressed(evt);
                                                            }
                                                        });

                                                        Disconect.setText("Disconnect");
                                                        Disconect.setEnabled(false);
                                                        Disconect.addActionListener(new java.awt.event.ActionListener() {
                                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                DisconectActionPerformed(evt);
                                                            }
                                                        });

                                                        Chat_area.setColumns(20);
                                                        Chat_area.setRows(5);
                                                        Chat_area.addKeyListener(new java.awt.event.KeyAdapter() {
                                                            public void keyPressed(java.awt.event.KeyEvent evt) {
                                                                Chat_areaKeyPressed(evt);
                                                            }
                                                            public void keyReleased(java.awt.event.KeyEvent evt) {
                                                                Chat_areaKeyReleased(evt);
                                                            }
                                                        });
                                                        jScrollPane2.setViewportView(Chat_area);

                                                        Send.setText("Send");
                                                        Send.setEnabled(false);
                                                        Send.addActionListener(new java.awt.event.ActionListener() {
                                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                SendActionPerformed(evt);
                                                            }
                                                        });

                                                        Attach.setText("Attach file");
                                                        Attach.setEnabled(false);
                                                        Attach.addActionListener(new java.awt.event.ActionListener() {
                                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                AttachActionPerformed(evt);
                                                            }
                                                        });

                                                        Conect.setText("Connect");
                                                        Conect.addActionListener(new java.awt.event.ActionListener() {
                                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                ConectActionPerformed(evt);
                                                            }
                                                        });

                                                        jScrollPane3.setAutoscrolls(true);

                                                        Display_area.setEditable(false);
                                                        Display_area.setDropTarget(new DropTarget()
                                                            {
                                                                public synchronized void drop(DropTargetDropEvent evt) {
                                                                    try {
                                                                        evt.acceptDrop(DnDConstants.ACTION_COPY);
                                                                        List<File> droppedFiles = (List<File>)
                                                                        evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                                                                        for (File file : droppedFiles) {
                                                                            pathName = file.getPath();
                                                                            String fshort = file.getName();
                                                                            TagValue atv = new TagValue(Tags.OPEN_FILE_REQ, fshort.getBytes(), fshort.getBytes().length);
                                                                            writer.writeTag(atv);
                                                                            cish.currentState = ChatState.FILE_REQ_SENT;
                                                                        }
                                                                    } catch (Exception ex) {
                                                                        ex.printStackTrace();
                                                                    }
                                                                }
                                                            });
                                                            jScrollPane3.setViewportView(Display_area);

                                                            jLabel4.setText("Port: ");

                                                            Port.setText("1553");

                                                            smile_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p2pchat2012/1.gif"))); // NOI18N
                                                            smile_button.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    smile_buttonActionPerformed(evt);
                                                                }
                                                            });

                                                            setting.setText("Setting");
                                                            setting.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    settingActionPerformed(evt);
                                                                }
                                                            });

                                                            jComboBox1.setMaximumRowCount(6);
                                                            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Arial" }));
                                                            jComboBox1.setToolTipText("");
                                                            jComboBox1.setAutoscrolls(true);
                                                            jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                                                            GraphicsEnvironment gEnv = GraphicsEnvironment
                                                            .getLocalGraphicsEnvironment();
                                                            String envfonts[] = gEnv.getAvailableFontFamilyNames();
                                                            Vector vector = new Vector();
                                                            for (int i = 1; i < envfonts.length; i++) {
                                                                jComboBox1.insertItemAt(envfonts[i],i);
                                                            }
                                                            jComboBox1.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    jComboBox1ActionPerformed(evt);
                                                                }
                                                            });

                                                            jComboBox2.setMaximumRowCount(6);
                                                            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "8", "10", "12", "14", "16", "18", "20", "22", "24", "26", "28", "30", "36", "48", "72" }));
                                                            jComboBox2.setSelectedIndex(2);
                                                            jComboBox2.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    jComboBox2ActionPerformed(evt);
                                                                }
                                                            });

                                                            bold_select.setBackground(java.awt.Color.lightGray);
                                                            bold_select.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                                                            bold_select.setText("B");
                                                            bold_select.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                                                            bold_select.setBorderPainted(false);
                                                            bold_select.setContentAreaFilled(false);
                                                            bold_select.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    bold_selectActionPerformed(evt);
                                                                }
                                                            });

                                                            italic_select.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
                                                            italic_select.setText("I");
                                                            italic_select.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                                                            italic_select.setBorderPainted(false);
                                                            italic_select.setContentAreaFilled(false);
                                                            italic_select.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    italic_selectActionPerformed(evt);
                                                                }
                                                            });

                                                            underline_select.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                                                            underline_select.setText("U");
                                                            underline_select.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                                                            underline_select.setBorderPainted(false);
                                                            underline_select.setContentAreaFilled(false);
                                                            underline_select.addActionListener(new java.awt.event.ActionListener() {
                                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                                    underline_selectActionPerformed(evt);
                                                                }
                                                            });

                                                            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                                                            jPanel1.setLayout(jPanel1Layout);
                                                            jPanel1Layout.setHorizontalGroup(
                                                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                    .addContainerGap()
                                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                            .addComponent(jLabel1)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                            .addComponent(IP_con, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(jLabel4)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                            .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(Conect)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(Disconect))
                                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                    .addGap(10, 10, 10)
                                                                                    .addComponent(smile_button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                    .addComponent(bold_select, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addComponent(italic_select, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addComponent(underline_select, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                    .addComponent(Attach, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                    .addComponent(setting)
                                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                    .addComponent(jLabel3))
                                                                                .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                            );
                                                            jPanel1Layout.setVerticalGroup(
                                                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                    .addContainerGap()
                                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(IP_con, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(Disconect)
                                                                        .addComponent(Conect)
                                                                        .addComponent(jLabel4)
                                                                        .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(smile_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                            .addGap(0, 0, Short.MAX_VALUE)
                                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                .addComponent(Attach)
                                                                                .addComponent(setting)
                                                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(bold_select)
                                                                                .addComponent(italic_select)
                                                                                .addComponent(underline_select))))
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addContainerGap())
                                                            );

                                                            jLabel2.setText("Version: 3.0 | Author: Thanh-Minh-Tuan");

                                                            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                                                            getContentPane().setLayout(layout);
                                                            layout.setHorizontalGroup(
                                                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                    .addContainerGap()
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                            .addComponent(jLabel2)
                                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                            .addComponent(jSeparator1))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                            .addGap(0, 0, Short.MAX_VALUE)))
                                                                    .addContainerGap())
                                                            );
                                                            layout.setVerticalGroup(
                                                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                    .addContainerGap()
                                                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                            );

                                                            pack();
                                                            java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
                                                            java.awt.Dimension dialogSize = getSize();
                                                            setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
                                                        }// </editor-fold>//GEN-END:initComponents

    private void DisconectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconectActionPerformed
        this.disconect();
    }//GEN-LAST:event_DisconectActionPerformed
    
    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
       send(Chat_area.getText());
    }//GEN-LAST:event_SendActionPerformed
     //smile list begin
      private void menu_item1ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)01");
    smile_list.setVisible(false);
    }
    private void menu_item2ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)02");
    smile_list.setVisible(false);
    }
     private void menu_item3ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)03");
        smile_list.setVisible(false);
    }
     private void  menu_item4ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)04");
    smile_list.setVisible(false);
    }
           private void menu_item5ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)05");
    smile_list.setVisible(false);
    }
    private void menu_item6ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)06");
    smile_list.setVisible(false);
    }
     private void menu_item7ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)07");
        smile_list.setVisible(false);
    }
     private void  menu_item8ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)08");
    smile_list.setVisible(false);
    }
             private void menu_item9ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)09");
    smile_list.setVisible(false);
    }
    private void menu_item10ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)10");
    smile_list.setVisible(false);
    }
     private void menu_item11ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)11");
        smile_list.setVisible(false);
    }
     private void  menu_item12ActionPerformed(java.awt.event.ActionEvent evt)
    {
    Chat_area.append(":(s)12");
    smile_list.setVisible(false);
    }
 //simel list end   
    private void send(String msg){
         try {
            // TODO add your handling code here:
         //   String msg=Chat_area.getText();
            //chuan hoa
            msg=msg.replaceAll("<", "<<");
            msg=msg.replaceAll(">", ">>");
            //--------------------------
            TagValue atv = new TagValue (Tags.OPEN_CHAT_MSG, msg.getBytes("UTF8"), msg.getBytes().length);
            writer.writeTag(atv);            
          Display(myName+": "+Chat_area.getText(),true);
    //        Display(myName+": ");
     //       Display(Chat_area.getText());
            Chat_area.setText("");
        } catch (IOException ex) {
            Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void AttachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachActionPerformed
        // TODO add your handling code here:
        FileDialog filedialog = new FileDialog(new Frame(),"Please choose the file to send:", FileDialog.LOAD);
        filedialog.setVisible(true);
        if(filedialog.getFile()!=null){
            try {
                pathName = filedialog.getDirectory()+filedialog.getFile();
                File f = new File(pathName);
                String fshort = f.getName();
                TagValue atv = new TagValue(Tags.OPEN_FILE_REQ, fshort.getBytes(), fshort.getBytes().length);
                writer.writeTag(atv);
                cish.currentState = ChatState.FILE_REQ_SENT;
            } catch (IOException ex) {
                Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_AttachActionPerformed
 }
        private void IP_conKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IP_conKeyPressed
            if(KeyEvent.getKeyText(evt.getKeyCode()).equals("Enter")){
                connect();
            }
    }//GEN-LAST:event_IP_conKeyPressed

    private void disconect(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_disconect
        // TODO add your handling code here:
        if (connect==false) this.dispose();
        else disconect();
        
    }//GEN-LAST:event_disconect
    
    private void Chat_areaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Chat_areaKeyPressed
        // TODO add your handling code here:
         if(KeyEvent.getKeyText(evt.getKeyCode()).equals("Enter")){
             send(Chat_area.getText());
            }         
    }//GEN-LAST:event_Chat_areaKeyPressed

    private void Chat_areaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Chat_areaKeyReleased
        if(KeyEvent.getKeyText(evt.getKeyCode()).equals("Enter")){
            Chat_area.setText("");
        }
    }//GEN-LAST:event_Chat_areaKeyReleased

    private void ConectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConectActionPerformed
        // TODO add your handling code here:
        connect();
    }//GEN-LAST:event_ConectActionPerformed

    private void smile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smile_buttonActionPerformed
        // TODO add your handling code here:
        smile_list.show(smile_button, smile_button.getHeight(), smile_button.getHeight());
    }//GEN-LAST:event_smile_buttonActionPerformed

    private void settingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingActionPerformed
        p2pchat2012.P2PChat2012.jMenuItem2.doClick();
    }//GEN-LAST:event_settingActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // update font setting
        //send message {{{{f}}}}selectedfont to partner
        my_setting.font_name = jComboBox1.getSelectedItem().toString();
        send("{{{{f}}}}" + my_setting.font_name);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void underline_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_underline_selectActionPerformed
        underline_select.setBorderPainted(underline_select.isSelected());
        my_setting.underline = underline_select.isSelected();
        if (my_setting.underline) {
            send("{{{{u}}}}");
        } else {
            send("{{{{t}}}}");
        }
    }//GEN-LAST:event_underline_selectActionPerformed

    private void bold_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bold_selectActionPerformed
          bold_select.setBorderPainted(bold_select.isSelected());
        my_setting.bold = bold_select.isSelected();
        if(my_setting.bold)
            send("{{{{b}}}}");
        else
            send("{{{{c}}}}");
    }//GEN-LAST:event_bold_selectActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
          // update font setting
      //send message {{{{s}}}}size to partner
        my_setting.size = Integer.parseInt(jComboBox2.getSelectedItem().toString()) ;
        send("{{{{s}}}}"+jComboBox2.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void italic_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_italic_selectActionPerformed
        italic_select.setBorderPainted(italic_select.isSelected());
        my_setting.italic = italic_select.isSelected();
        if(my_setting.italic)
            send("{{{{i}}}}");
        else
            send("{{{{j}}}}");
    }//GEN-LAST:event_italic_selectActionPerformed
    private void disconect(){
         try {
            // TODO add your handling code here:
            TagValue atv = new TagValue(Tags.SESSION_CLOSE, "".getBytes(), "".getBytes().length);
            writer.writeTag(atv);
            cish.currentState = ChatState.END;
            Disconect.setEnabled(false);
            Send.setEnabled(false);
            Attach.setEnabled(false);
            IP_con.setEditable(true);
            Conect.setEnabled(true);
            connect=false;
        } catch (IOException ex) {
            Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private boolean connect(){
        boolean flag=false;
        if (IP_con.getText().equals(""))
             JOptionPane.showMessageDialog(rootPane, "Please fill out IP want to use conect!", "Error", JOptionPane.ERROR_MESSAGE);
        else if (Port.getText().equals(""))
             JOptionPane.showMessageDialog(rootPane, "Please fill out Port want to use conect!", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            try {
                s = new Socket(IP_con.getText(), Integer.parseInt(Port.getText()));
            } catch (UnknownHostException ex) {
                Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Cannot find server ", "Error", JOptionPane.ERROR_MESSAGE);
                flag=true;
            } catch (IOException ex) {
                Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Cannot connect to server", "Error", JOptionPane.ERROR_MESSAGE);
               flag=true;
            }
         
            if (!flag) {
                try {
                    cish = new ClientInputStreamHandler(s,this,myName,m);
                } catch (IOException ex) {
                    Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
                }
                cish.start();
                try {
                    writer = new TagWriter(s.getOutputStream());
                } catch (IOException ex) {
                    Logger.getLogger(ConversationClient.class.getName()).log(Level.SEVERE, null, ex);
                }
                Disconect.setEnabled(true);
                Send.setEnabled(true);
                Attach.setEnabled(true);
                IP_con.setEditable(false);   
                Conect.setEnabled(false);
                connect=true;
            }
        }
        return !(flag);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversationClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
/*        Display_area.setDropTarget(new DropTarget() 
   {
    public synchronized void drop(DropTargetDropEvent evt) {
        try {
            evt.acceptDrop(DnDConstants.ACTION_COPY);
            List<File> droppedFiles = (List<File>)
                evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
            for (File file : droppedFiles) {
          //     File f = new File(pathName+fileName);
                String fshort = file.getName();
                TagValue atv = new TagValue(Tags.OPEN_FILE_REQ, fshort.getBytes(), fshort.getBytes().length);
                writer.writeTag(atv);
                cish.currentState = ChatState.FILE_REQ_SENT;
            } 
        } catch (Exception ex) {
            ex.printStackTrace();
        }
 }
 * });
*/

        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ConversationClient().setVisible(true);
            }
        });
    }
     public void Display(String msg,boolean is_my_msg){
        
if(msg.indexOf("{{{{")!= -1)
        return;
      
        msg=msg.replaceAll("<<", "<");
        msg=msg.replaceAll(">>", ">");
// start emoticon process - minh
        smile_process newsmile = new smile_process();
           newsmile.parse_string(msg);
   if(is_my_msg) 
{
          
         try {
                // Get the text pane's document
                StyledDocument doc = (StyledDocument)Display_area.getDocument();
                // The image must first be wrapped in a style
                javax.swing.text.Style style = doc.addStyle("StyleName", null);
             //   SimpleAttributeSet set = new SimpleAttributeSet();
                StyleConstants.setFontFamily(style, my_setting.font_name); 
                StyleConstants.setFontSize(style, my_setting.size);
                StyleConstants.setBold(style, my_setting.bold);
                StyleConstants.setItalic(style,my_setting.italic);
                StyleConstants.setUnderline(style,my_setting.underline);
                
                
                if(newsmile.getstr2()!=null && !(newsmile.getstr2().equalsIgnoreCase("")))
                 {
                      javax.swing.text.Style style_icon = doc.addStyle("styleicon", style);
                 //   StyleConstants.setIcon(style, new ImageIcon("/p2pchat2012/"+emoticon[newsmile.getindex()-1]));
                      StyleConstants.setIcon(style_icon, new ImageIcon( getClass().getResource("/p2pchat2012/"+emoticon[newsmile.getindex()-1])));
                     
                      // Insert the image at the end of the text
                       doc.insertString(doc.getLength(), newsmile.getstr1(),style);    
                        doc.insertString(doc.getLength(), "ignored text",style_icon);
                      if(newsmile.getstr3()!=null && !(newsmile.getstr3().equalsIgnoreCase("")))
                         //   doc.insertString(doc.getLength(), newsmile.getstr3()+"\n",null);
                         {  
                           Display(newsmile.getstr3(),true);
                         }
                        else
                       doc.insertString(doc.getLength(),"\n",style);  
                 }
             else
                     doc.insertString(doc.getLength(),msg+"\n",style);
                 JScrollBar vbar = jScrollPane3.getVerticalScrollBar();
                 vbar.setValue(vbar.getMaximum());
                   vbar.paint(vbar.getGraphics());
            } catch (BadLocationException e) {}
      
}
   else
       {
          try {
                // Get the text pane's document
                StyledDocument doc = (StyledDocument)Display_area.getDocument();
                // The image must first be wrapped in a style
                javax.swing.text.Style style = doc.addStyle("StyleName", null);
             //   SimpleAttributeSet set = new SimpleAttributeSet();
                StyleConstants.setFontFamily(style, partner_setting.font_name); 
                StyleConstants.setFontSize(style, partner_setting.size);
                StyleConstants.setBold(style, partner_setting.bold);
                StyleConstants.setItalic(style,partner_setting.italic);
                StyleConstants.setUnderline(style,partner_setting.underline);
                
                
                if(newsmile.getstr2()!=null && !(newsmile.getstr2().equalsIgnoreCase("")))
                 {
                      javax.swing.text.Style style_icon = doc.addStyle("styleicon", style);
                 //   StyleConstants.setIcon(style, new ImageIcon("/p2pchat2012/"+emoticon[newsmile.getindex()-1]));
                      StyleConstants.setIcon(style_icon, new ImageIcon( getClass().getResource("/p2pchat2012/"+emoticon[newsmile.getindex()-1])));
                     
                      // Insert the image at the end of the text
                       doc.insertString(doc.getLength(), newsmile.getstr1(),style);    
                        doc.insertString(doc.getLength(), "ignored text",style_icon);
                      if(newsmile.getstr3()!=null && !(newsmile.getstr3().equalsIgnoreCase("")))
                         //   doc.insertString(doc.getLength(), newsmile.getstr3()+"\n",null);
                         {  
                           Display(newsmile.getstr3(),true);
                         }
                        else
                       doc.insertString(doc.getLength(),"\n",style);  
                 }
             else
                     doc.insertString(doc.getLength(),msg+"\n",style);
                 JScrollBar vbar = jScrollPane3.getVerticalScrollBar();
                 vbar.setValue(vbar.getMaximum());
                   vbar.paint(vbar.getGraphics());
            } catch (BadLocationException e) {}
      
}
     //end  my msg

 }   
    public void Discon(){
        Disconect.setEnabled(false);
        Send.setEnabled(false);
        Attach.setEnabled(false);
        Conect.setEnabled(true);
        IP_con.setEditable(true);
        connect=false;
    }
    public String getIPConect(){
        return IP_con.getText();
    }
      private javax.swing.JMenuItem menu_item1 ;
        private javax.swing.JMenuItem menu_item2 ;    
    private javax.swing.JMenuItem menu_item3 ;      
    private javax.swing.JMenuItem menu_item4 ;     
    private javax.swing.JMenuItem menu_item5 ;     
    private javax.swing.JMenuItem menu_item6 ;    
    private javax.swing.JMenuItem menu_item7 ;   
    private javax.swing.JMenuItem menu_item8 ; 
    private javax.swing.JMenuItem menu_item9 ; 
    private javax.swing.JMenuItem menu_item10 ;
    private javax.swing.JMenuItem menu_item11 ;
    private javax.swing.JMenuItem menu_item12 ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attach;
    private javax.swing.JTextArea Chat_area;
    private javax.swing.JButton Conect;
    private javax.swing.JButton Disconect;
    public static javax.swing.JTextPane Display_area;
    private javax.swing.JTextField IP_con;
    private javax.swing.JTextField Port;
    private javax.swing.JButton Send;
    private javax.swing.JToggleButton bold_select;
    private javax.swing.JToggleButton italic_select;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton setting;
    private javax.swing.JButton smile_button;
    private javax.swing.JPopupMenu smile_list;
    private javax.swing.JToggleButton underline_select;
    // End of variables declaration//GEN-END:variables
}
